// 🔹 Problem: Subarray Sum Equals K  
// 🔗 Link: https://leetcode.com/problems/subarray-sum-equals-k/  
// 🧠 Tags: Arrays, Prefix Sum, Hashing  
// ✅ Status: Solved (Brute, Optimal)

// ------------------------------------------------
// 🔸 Brute Force Approach
// 💡 Try all subarrays and count if sum equals k
// 🕒 Time Complexity: O(n^2)
// 🔍 Space Complexity: O(1)
// ------------------------------------------------
int subarraySumBrute(vector<int>& nums, int k) {
    int count = 0;
    for (int i = 0; i < nums.size(); i++) {
        int sum = 0;
        for (int j = i; j < nums.size(); j++) {
            sum += nums[j];
            if (sum == k) count++;
        }
    }
    return count;
}

// ------------------------------------------------
// 🔸 Optimal Approach
// 💡 Use hashmap to track prefix sum frequencies
// 🕒 Time Complexity: O(n)
// 🔍 Space Complexity: O(n)
// ------------------------------------------------
int subarraySum(vector<int>& nums, int k) {
    int n = nums.size(); 
    unordered_map<int , int> mpp;
    int preSum = 0, cnt = 0;

    mpp[0] = 1; 
    for (int i = 0; i < n; i++) {
        preSum += nums[i];
        int remove = preSum - k;
        cnt += mpp[remove];
        mpp[preSum] += 1;
    }
    return cnt;
    }
